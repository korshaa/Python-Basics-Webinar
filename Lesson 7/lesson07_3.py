class Cell:
    def __init__(self, cell):
        self.cell = cell

    def __str__(self):
        return f'{self.cell}'

    def __add__(self, other):
        print("–°—É–º–º–∞ –∫–ª–µ—Ç–æ–∫:", end=" ")
        return Cell(self.cell + other.cell)

    def __sub__(self, other):
        print("–í—ã—á–µ—Ç–∞–Ω–∏–µ –∫–ª–µ—Ç–æ–∫:", end=" ")
        return Cell(self.cell - other.cell if self.cell - other.cell > 0 else "–í—ã—á–∏—Ç–∞–Ω–∏–µ –∫–ª–µ—Ç–æ–∫ –Ω–µ –≤–æ–∑–º–æ–∂–Ω–æ!!!")

    def __mul__(self, other):
        print("–£–º–Ω–æ–∂–µ–Ω–∏–µ –∫–ª–µ—Ç–æ–∫:", end=" ")
        return Cell(self.cell * other.cell)

    def __truediv__(self, other):
        print("–î–µ–ª–µ–Ω–∏–µ –∫–ª–µ—Ç–æ–∫:", end=" ")
        return Cell(int(self.cell / other.cell) if other.cell > 0 else "–î–µ–ª–µ–Ω–∏–µ –∫–ª–µ—Ç–æ–∫ –Ω–µ –≤–æ–∑–º–æ–∂–Ω–æ, –≤—Ç–æ—Ä–∞—è –∫–ª–µ—Ç–∫–∞ —Ä–∞–≤–Ω–∞ –Ω—É–ª—é")

    def make_order(self, row):
        return "\n".join(["üòÄ" * row for i in range(self.cell // row)]) + "\n" + "üíñ" * (self.cell % row)


cell_1 = Cell(12)
cell_2 = Cell(7)
print(cell_1 + cell_2)
print(cell_1 - cell_2)
print(cell_1 * cell_2)
print(cell_1 / cell_2)

print(cell_2.make_order(5))
